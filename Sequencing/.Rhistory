strip.background = element_blank(),
strip.text = element_text(size = 7, face="bold")) +
scale_y_continuous(expand = c(0, 0)) +
ggtitle("16S rRNA gene abundance archaea (class level)") +
labs(x="Treatment", y = "Relative abundance (DNA)")+
guides(fill=guide_legend(ncol=1)) +
facet_grid(~treatment  ,scales = "free")
# rename taxa depending on max abundance ####
## use function 'sort_abundant_taxa'
source("filter_taxa_above_threshold.R")
load("arc_long_rel_abd_table_bel05perc.RData")
## taxa above 0.5% in at least one samples
ta05 <- sort_abundant_taxa(table = phylo_melt, abundance_threshold = 0.5, Abundance = "Abundance")
# order additional metadata columns for later plotting ####
ta05_original <- ta05
ta05$ASV_table_taxa_abv_0.5_perc$nucleic_acids <- factor(ta05$ASV_table_taxa_abv_0.5_perc$nucleic_acids, levels=c("DNA","RNA"), ordered=T)
ta05$ASV_table_taxa_abv_0.5_perc$Sample <- factor(ta05$ASV_table_taxa_abv_0.5_perc$Sample, levels=c("arc.2C","arc.2C.Gen4","arc.B1", "arc.B2", "arc.B3",
"arc.BHI01A", "arc.BHI01B", "arc.BHI01C",
"arc.BHI05A", "arc.BHI05B", "arc.BHI05C",
"arc.LB01A", "arc.LB01B", "arc.LB01C",
"arc.LB05A", "arc.LB05B", "arc.LB05C", "arc.BHI05LB05"),
labels = c("2C","2C Gen4","Control A","Control B","Control C","BHI 0.1% A","BHI 0.1% B","BHI 0.1% C","BHI 0.5% A","BHI 0.5% B","BHI 0.5% C",
"LB 0.1% A","LB 0.1% B","LB 0.1% C", "LB 0.5% A","LB 0.5% B","LB 0.5% C", "BHI 0.5% LB 0.5%"), ordered = T)
ta05$ASV_table_taxa_abv_0.5_perc$treatment <- factor(ta05$ASV_table_taxa_abv_0.5_perc$treatment, levels=c("WM",
"LB", "BHI", "BHI_LB"),
labels = c("WM", "WM + LB", "WM + BHI", "WM + LB + BHI"),ordered=T)
ta05$ASV_table_taxa_abv_0.5_perc$concentration <- factor(ta05$ASV_table_taxa_abv_0.5_perc$concentration, levels=c("1", "0.1", "0.5"), ordered = T)
save(ta05, file = "arc_long_rel_abd_table_bel05perc.RData")
load("arc_long_rel_abd_table_bel05perc.RData")
### which classes will be plotted
unique(ta05$ASV_table_taxa_abv_0.5_perc$Class_mod)
### subset to only column with class_mod as single taxonomy and Phylum_mod to group them by
ta05_class <- select(ta05$ASV_table_taxa_abv_0.5_perc, OTU, Sample, Class_mod, Phylum_mod, Abundance, nucleic_acids, treatment, concentration) %>%
mutate(Class_mod=factor(Class_mod, levels=c("other_p_Asgardarchaeota_<0.5%", "Bathyarchaeia","Methanosarcinia","other_p_Halobacterota_<0.5%",
"Thermoplasmata","other_Archaea_<0.5%"),
ordered = T),
Phylum_mod=factor(Phylum_mod)) %>%
group_by(Class_mod)
### sum ASVs of same taxonomy
ta05_class_s <- ta05_class %>%
group_by(Sample, Class_mod, Phylum_mod, nucleic_acids, treatment, concentration) %>%
summarise(Abundance = sum(Abundance)) %>%
ungroup()
### plot
ggplot(ta05_class_s, aes(x = Sample, y = Abundance, fill = Class_mod)) +
geom_bar(position = "fill", stat = "identity", col = "black", linewidth = 0.2) +
scale_fill_manual("Taxa", values = cols2) + theme_bw() +
theme(plot.title = element_text(size = 20, face = "bold",hjust=0.5),
axis.text.x=element_text(size=7, angle=90, hjust = 1, vjust = 0.5),
axis.text.y=element_text(size=7),
axis.ticks.x = element_blank(),
axis.title.y = element_text(face="bold", size=12),
axis.title.x = element_text(face="bold", size=12),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "right",
legend.text = element_text(size=7),
legend.title=element_text(size=7, face="bold"),
legend.key.size = unit(0.35, "cm"),
strip.background = element_blank(),
strip.text = element_text(size = 7, face="bold")) +
scale_y_continuous(expand = c(0, 0)) +
ggtitle("16S rRNA gene abundance archaea (class level)") +
labs(x="Treatment", y = "Relative abundance (DNA)")+
guides(fill=guide_legend(ncol=1)) +
facet_grid(~treatment  ,scales = "free")
View(ta05)
View(ta05_class)
otu_table(objphy)              # ASV count table
load("taxmap-arc.RData")
otu_table(objphy)              # ASV count table
## ASV table raw counts
asv <- read_tsv("asv_table_tax_Lib80_arc.txt")
## metadata, need to have same sample names as in taxmap
sessmdata <- read_tsv("meta_arc.txt")
## get sample names
sample.names <- sessmdata$Sample
## make taxmap object ####
obj <- parse_tax_data(
tax_data = asv,            # which table to use
class_cols = c("Kingdom", "Phylum", "Class", "Order", "Family","Genus"),   # which columns have the taxonomy
named_by_rank = T          # keep the column names as rank names in command 'taxon_ranks'
)
obj
obj$data$tax_data <- obj$data$tax_data[c("taxon_id", "ASV_ID", sample.names)]
### rename table to asv_table
names(obj$data) <- "asv_table"
obj
# create phyloseq object ####
# maybe need to change names of otu_table, otu_id_col and sample names (= column name of column with sample names)
objphy <- as_phyloseq(obj, otu_table = "asv_table", otu_id_col = "ASV_ID", sample_data = sessmdata, sample_id_col = "Sample")
ntaxa(objphy)                  # how many taxa (including subtaxa)
nsamples(objphy)               # how many samples
sample_names(objphy)           # check sample names
sample_variables(objphy)       # sample variables from mdata
otu_table(objphy)              # ASV count table
tax_table(objphy)              # taxonomy for ASVs
taxa_names(objphy)             # ASV IDs
rank_names(objphy)             # check rank names
## if not already named like this, change rank names
colnames(tax_table(objphy)) <- c("Kingdom", "Phylum", "Class", "Order", "Family","Genus")
## calculate relative abundance
opr <- transform_sample_counts(objphy, function(x) x/sum(x))
## melt phyloseq object into dataframe
phylo_melt <- psmelt(opr)
rm(obj, objphy, opr, asv)
# rename taxa depending on max abundance ####
## use function 'sort_abundant_taxa'
source("filter_taxa_above_threshold.R")
## taxa above 0.5% in at least one samples
ta05 <- sort_abundant_taxa(table = phylo_melt, abundance_threshold = 0.5, Abundance = "Abundance")
# order additional metadata columns for later plotting ####
ta05_original <- ta05
ta05$ASV_table_taxa_abv_0.5_perc$nucleic_acids <- factor(ta05$ASV_table_taxa_abv_0.5_perc$nucleic_acids, levels=c("DNA","RNA"), ordered=T)
ta05$ASV_table_taxa_abv_0.5_perc$Sample <- factor(ta05$ASV_table_taxa_abv_0.5_perc$Sample, levels=c("arc.2C","arc.2C.Gen4","arc.B1", "arc.B2", "arc.B3",
"arc.BHI01A", "arc.BHI01B", "arc.BHI01C",
"arc.BHI05A", "arc.BHI05B", "arc.BHI05C",
"arc.LB01A", "arc.LB01B", "arc.LB01C",
"arc.LB05A", "arc.LB05B", "arc.LB05C", "arc.BHI05LB05"),
labels = c("2C","2C Gen4","Control A","Control B","Control C","BHI 0.1% A","BHI 0.1% B","BHI 0.1% C","BHI 0.5% A","BHI 0.5% B","BHI 0.5% C",
"LB 0.1% A","LB 0.1% B","LB 0.1% C", "LB 0.5% A","LB 0.5% B","LB 0.5% C", "BHI 0.5% LB 0.5%"), ordered = T)
ta05$ASV_table_taxa_abv_0.5_perc$treatment <- factor(ta05$ASV_table_taxa_abv_0.5_perc$treatment, levels=c("WM",
"LB", "BHI", "BHI_LB"),
labels = c("WM", "WM + LB", "WM + BHI", "WM + LB + BHI"),ordered=T)
ta05$ASV_table_taxa_abv_0.5_perc$concentration <- factor(ta05$ASV_table_taxa_abv_0.5_perc$concentration, levels=c("1", "0.1", "0.5"), ordered = T)
## ASV table raw counts
asv <- read_tsv("asv_table_tax_Lib80_bac.txt")
## metadata, need to have same sample names as in taxmap
mdata <- read_tsv("meta_arc_bac.txt")
## get sample names
sample.names <- mdata$Sample
## make taxmap object ####
obj <- parse_tax_data(
tax_data = asv,            # which table to use
class_cols = c("Kingdom", "Phylum", "Class", "Order", "Family","Genus"),   # which columns have the taxonomy
named_by_rank = T          # keep the column names as rank names in command 'taxon_ranks'
)
obj
### remove taxonomy columns from ASV count table, only keep ASV_ID and taxon_ID column
obj$data$tax_data <- obj$data$tax_data[c("taxon_id", "ASV_ID", sample.names)]
### rename table to asv_table
names(obj$data) <- "asv_table"
obj
# 385 taxa (including subtaxa)
# 202 ASVs (=number of rows of tax_data table)
ini_reads <- sum(obj$data$asv_table[, sample.names])
ini_reads
## modify taxmap object ####
### remove any ASVs which are not Bacteria
obj <- metacoder::filter_taxa(obj,
taxon_names == "Bacteria",
subtaxa = T)
sum(obj$data$asv_table[, sample.names])/ini_reads
### remove doubletons and singletons
obj$data$asv_table <- metacoder::zero_low_counts(obj, "asv_table",
min_count = 3,
use_total = T,
other_cols = T)
### check for empty ASVs
no_reads <- rowSums(obj$data$asv_table[, sample.names]) == 0
sum(no_reads)  # 20 empty ASVs
# remove empty ASVs
obj <- metacoder::filter_obs(obj, "asv_table",
! no_reads,
drop_taxa = T)
# taxa reduced to 349
# ASVs reduced to 182
sum(obj$data$asv_table[, sample.names])/ini_reads
# check taxonomy table if everything looks ok
print(taxonomy_table(obj), n = 300)
## calculate further tables ####
## Calculate relative abundance
# relative abundance per ASV
obj$data$rel_abd <- calc_obs_props(obj, "asv_table", other_cols = T)
# relative abundance per taxon
obj$data$rel_tax_abd <- calc_taxon_abund(obj, "rel_abd")
print(obj)
## save or load created taxmap object ####
save(obj, file = "taxmap-bac.RData")
load("taxmap-bac.RData")
# create phyloseq object ####
# maybe need to change names of otu_table, otu_id_col and sample names (= column name of column with sample names)
objphy <- as_phyloseq(obj, otu_table = "asv_table", otu_id_col = "ASV_ID", sample_data = mdata, sample_id_col = "Sample")
ntaxa(objphy)                  # how many taxa (including subtaxa)
nsamples(objphy)               # how many samples
sample_names(objphy)           # check sample names
sample_variables(objphy)       # sample variables from mdata
otu_table(objphy)              # ASV count table
tax_table(objphy)              # taxonomy for ASVs
taxa_names(objphy)             # ASV IDs
rank_names(objphy)             # check rank names
## if not already named like this, change rank names
colnames(tax_table(objphy)) <- c("Kingdom", "Phylum", "Class", "Order", "Family","Genus")
## calculate relative abundance
opr <- transform_sample_counts(objphy, function(x) x/sum(x))
## melt phyloseq object into dataframe
phylo_melt <- psmelt(opr)
### save object phylo_melt used to perform all following operations and remove not needed objects
save(phylo_melt, file = "bac_rawtable_phylomelt.RData")
rm(obj, objphy, opr, asv)
# rename taxa depending on max abundance ####
## use function 'sort_abundant_taxa'
source("filter_taxa_above_threshold.R")
## taxa above 0.5% in at least one samples
ta05 <- sort_abundant_taxa(table = phylo_melt, abundance_threshold = 0.5, Abundance = "Abundance")
str(ta05)
# order additional metadata columns for later plotting ####
ta05_original <- ta05
ta05$ASV_table_taxa_abv_0.5_perc$nucleic_acids <- factor(ta05$ASV_table_taxa_abv_0.5_perc$nucleic_acids, levels=c("DNA","RNA"), ordered=T)
View(ta05_original)
ntaxa(objphy)                  # how many taxa (including subtaxa)
# create phyloseq object ####
# maybe need to change names of otu_table, otu_id_col and sample names (= column name of column with sample names)
objphy <- as_phyloseq(obj, otu_table = "asv_table", otu_id_col = "ASV_ID", sample_data = mdata, sample_id_col = "Sample")
## ASV table raw counts
asv <- read_tsv("asv_table_tax_Lib80_bac.txt")
## metadata, need to have same sample names as in taxmap
mdata <- read_tsv("meta_arc_bac.txt")
## get sample names
sample.names <- mdata$Sample
## make taxmap object ####
obj <- parse_tax_data(
tax_data = asv,            # which table to use
class_cols = c("Kingdom", "Phylum", "Class", "Order", "Family","Genus"),   # which columns have the taxonomy
named_by_rank = T          # keep the column names as rank names in command 'taxon_ranks'
)
obj
### remove taxonomy columns from ASV count table, only keep ASV_ID and taxon_ID column
obj$data$tax_data <- obj$data$tax_data[c("taxon_id", "ASV_ID", sample.names)]
### rename table to asv_table
names(obj$data) <- "asv_table"
obj
# 385 taxa (including subtaxa)
# 202 ASVs (=number of rows of tax_data table)
ini_reads <- sum(obj$data$asv_table[, sample.names])
ini_reads
## modify taxmap object ####
### remove any ASVs which are not Bacteria
obj <- metacoder::filter_taxa(obj,
taxon_names == "Bacteria",
subtaxa = T)
sum(obj$data$asv_table[, sample.names])/ini_reads
### remove doubletons and singletons
obj$data$asv_table <- metacoder::zero_low_counts(obj, "asv_table",
min_count = 3,
use_total = T,
other_cols = T)
### check for empty ASVs
no_reads <- rowSums(obj$data$asv_table[, sample.names]) == 0
sum(no_reads)  # 20 empty ASVs
# remove empty ASVs
obj <- metacoder::filter_obs(obj, "asv_table",
! no_reads,
drop_taxa = T)
obj
# taxa reduced to 349
# ASVs reduced to 182
sum(obj$data$asv_table[, sample.names])/ini_reads
# check taxonomy table if everything looks ok
print(taxonomy_table(obj), n = 300)
## calculate further tables ####
## Calculate relative abundance
# relative abundance per ASV
obj$data$rel_abd <- calc_obs_props(obj, "asv_table", other_cols = T)
# relative abundance per taxon
obj$data$rel_tax_abd <- calc_taxon_abund(obj, "rel_abd")
print(obj)
## save or load created taxmap object ####
save(obj, file = "taxmap-bac.RData")
load("taxmap-bac.RData")
# create phyloseq object ####
# maybe need to change names of otu_table, otu_id_col and sample names (= column name of column with sample names)
objphy <- as_phyloseq(obj, otu_table = "asv_table", otu_id_col = "ASV_ID", sample_data = mdata, sample_id_col = "Sample")
ntaxa(objphy)                  # how many taxa (including subtaxa)
otu_table(objphy)              # ASV count table
tax_table(objphy)              # taxonomy for ASVs
load("bac_long_rel_abd_table_bel05perc.RData")
# packages ####
library(tidyverse)
library(taxa)
library(metacoder)
library(phyloseq)
library(hues)
library(cowplot)
library(devEMF)
# import data ####
setwd("H:/Desktop/PM4_qPCR/Sequencing")
## ASV table raw counts
asv <- read_tsv("asv_table_tax_Lib80_bac.txt")
load("taxmap-bac.RData")
load("bac_long_rel_abd_table_bel05perc.RData")
## taxa above 0.5% in at least one samples
ta05 <- sort_abundant_taxa(table = phylo_melt, abundance_threshold = 0.5, Abundance = "Abundance")
## metadata, need to have same sample names as in taxmap
mdata <- read_tsv("meta_arc_bac.txt")
## get sample names
sample.names <- mdata$Sample
## make taxmap object ####
obj <- parse_tax_data(
tax_data = asv,            # which table to use
class_cols = c("Kingdom", "Phylum", "Class", "Order", "Family","Genus"),   # which columns have the taxonomy
named_by_rank = T          # keep the column names as rank names in command 'taxon_ranks'
)
obj
### remove taxonomy columns from ASV count table, only keep ASV_ID and taxon_ID column
obj$data$tax_data <- obj$data$tax_data[c("taxon_id", "ASV_ID", sample.names)]
### rename table to asv_table
names(obj$data) <- "asv_table"
obj
# 385 taxa (including subtaxa)
# 202 ASVs (=number of rows of tax_data table)
ini_reads <- sum(obj$data$asv_table[, sample.names])
ini_reads
## modify taxmap object ####
### remove any ASVs which are not Bacteria
obj <- metacoder::filter_taxa(obj,
taxon_names == "Bacteria",
subtaxa = T)
### remove doubletons and singletons
obj$data$asv_table <- metacoder::zero_low_counts(obj, "asv_table",
min_count = 3,
use_total = T,
other_cols = T)
### check for empty ASVs
no_reads <- rowSums(obj$data$asv_table[, sample.names]) == 0
sum(no_reads)  # 20 empty ASVs
# remove empty ASVs
obj <- metacoder::filter_obs(obj, "asv_table",
! no_reads,
drop_taxa = T)
obj
# taxa reduced to 349
# ASVs reduced to 182
sum(obj$data$asv_table[, sample.names])/ini_reads
# check taxonomy table if everything looks ok
print(taxonomy_table(obj), n = 300)
## calculate further tables ####
## Calculate relative abundance
# relative abundance per ASV
obj$data$rel_abd <- calc_obs_props(obj, "asv_table", other_cols = T)
# relative abundance per taxon
obj$data$rel_tax_abd <- calc_taxon_abund(obj, "rel_abd")
print(obj)
## save or load created taxmap object ####
save(obj, file = "taxmap-bac.RData")
load("taxmap-bac.RData")
# create phyloseq object ####
# maybe need to change names of otu_table, otu_id_col and sample names (= column name of column with sample names)
objphy <- as_phyloseq(obj, otu_table = "asv_table", otu_id_col = "ASV_ID", sample_data = mdata, sample_id_col = "Sample")
ntaxa(objphy)                  # how many taxa (including subtaxa)
nsamples(objphy)               # how many samples
sample_names(objphy)           # check sample names
sample_variables(objphy)       # sample variables from mdata
otu_table(objphy)              # ASV count table
tax_table(objphy)              # taxonomy for ASVs
taxa_names(objphy)             # ASV IDs
## if not already named like this, change rank names
colnames(tax_table(objphy)) <- c("Kingdom", "Phylum", "Class", "Order", "Family","Genus")
## calculate relative abundance
opr <- transform_sample_counts(objphy, function(x) x/sum(x))
## melt phyloseq object into dataframe
phylo_melt <- psmelt(opr)
### save object phylo_melt used to perform all following operations and remove not needed objects
save(phylo_melt, file = "bac_rawtable_phylomelt.RData")
rm(obj, objphy, opr, asv)
load("bac_rawtable_phylomelt.RData")
# rename taxa depending on max abundance ####
## use function 'sort_abundant_taxa'
source("filter_taxa_above_threshold.R")
load("bac_long_rel_abd_table_bel05perc.RData")
## taxa above 0.5% in at least one samples
ta05 <- sort_abundant_taxa(table = phylo_melt, abundance_threshold = 0.5, Abundance = "Abundance")
str(ta05)
# order additional metadata columns for later plotting ####
ta05_original <- ta05
ta05$ASV_table_taxa_abv_0.5_perc$nucleic_acids <- factor(ta05$ASV_table_taxa_abv_0.5_perc$nucleic_acids, levels=c("DNA","RNA"), ordered=T)
ta05$ASV_table_taxa_abv_0.5_perc$Sample <- factor(ta05$ASV_table_taxa_abv_0.5_perc$Sample, levels=c("bac.2C","bac.2C.Gen4","bac.B1", "bac.B2", "bac.B3",
"bac.BHI01A", "bac.BHI01B", "bac.BHI01C",
"bac.BHI05A", "bac.BHI05B", "bac.BHI05C",
"bac.LB01A", "bac.LB01B", "bac.LB01C",
"bac.LB05A", "bac.LB05B", "bac.LB05C",
"bac.BHI05LB05","RNA.BHI05A", "RNA.BHI05B", "RNA.BHI05C",
"RNA.LB05A", "RNA.LB05B", "RNA.LB05C",
"RNA.BHI05LB05"),
labels = c("2C","2C Gen4","Control A","Control B","Control C","BHI 0.1% A","BHI 0.1% B","BHI 0.1% C","BHI 0.5% A","BHI 0.5% B","BHI 0.5% C",
"LB 0.1% A","LB 0.1% B","LB 0.1% C", "LB 0.5% A","LB 0.5% B","LB 0.5% C", "BHI 0.5% LB 0.5%",
"BHI 0.5% A","BHI 0.5% B","BHI 0.5% C","LB 0.5% A","LB 0.5% B","LB 0.5% C", "BHI 0.5% LB 0.5%"), ordered = T)
ta05$ASV_table_taxa_abv_0.5_perc$treatment <- factor(ta05$ASV_table_taxa_abv_0.5_perc$treatment, levels=c("WM",
"LB", "BHI", "BHI_LB"),
labels = c("WM", "WM + LB", "WM + BHI", "WM + LB + BHI"),ordered=T)
ta05$ASV_table_taxa_abv_0.5_perc$concentration <- factor(ta05$ASV_table_taxa_abv_0.5_perc$concentration, levels=c("1", "0.1", "0.5"), ordered = T)
save(ta05, file = "bac_long_rel_abd_table_bel05perc.RData")
View(ta05_original)
View(sort_abundant_taxa)
View(sort_abundant_taxa)
View(ta05)
View(ta05_original)
### which classes will be plotted
unique(ta05$ASV_table_taxa_abv_0.5_perc$Class_mod)
### subset to only column with class_mod as single taxonomy and Phylum_mod to group them by
ta05_class <- select(ta05$ASV_table_taxa_abv_0.5_perc, OTU, Sample, Class_mod, Phylum_mod, Abundance, nucleic_acids, treatment, concentration) %>%
mutate(Class_mod=factor(Class_mod, levels=c("Desulfovibrionia", "other_p_Desulfobacterota_<0.5%","Bacilli","other_p_Firmicutes_<0.5%",
"Gammaproteobacteria","other_p_Proteobacteria_<0.5%","other_Bacteria_<0.5%"), ordered = T),
Phylum_mod=factor(Phylum_mod)) %>%
group_by(Class_mod)
### sum ASVs of same taxonomy
ta05_class_s <- ta05_class %>%
group_by(Sample, Class_mod, Phylum_mod, nucleic_acids, treatment, concentration) %>%
summarise(Abundance = sum(Abundance)) %>%
ungroup()
cols2 <- c("#457B9D","#e0e0e0","#E5383B","#e0e0e0","#FDBF6F","#e0e0e0","#969696")
### plot
p1 <- ggplot(ta05_class_s[ta05_class_s$nucleic_acids == "DNA" & ta05_class_s$treatment %in% c("WM","WM + LB", "WM + BHI",  "WM + LB + BHI") ,], aes(x = Sample, y = Abundance, fill = Class_mod)) +
geom_bar(position = "fill", stat = "identity", col = "black", linewidth = 0.2) +
scale_fill_manual("Taxa", values = cols2) + theme_bw() +
theme(plot.title = element_text(size = 7, face = "bold",hjust=0.5),
axis.text.x=element_text(size=7, angle=90, hjust = 1, vjust = 0.5),
axis.text.y=element_text(size=7),
axis.ticks.x = element_blank(),
axis.title.y = element_text(face="bold", size=10),
axis.title.x = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "bottom",
legend.text = element_text(size=7),
legend.title=element_text(size=7, face="bold"),
legend.key.size = unit(0.35, "cm"),
strip.background = element_blank(),
strip.text = element_text(size = 7, face="bold")) +
scale_y_continuous(expand = c(0, 0)) +
#ggtitle("16S rRNA gene abundance archaea (class level)") +
labs(x="", y = "DNA")+
guides(fill=guide_legend(ncol=1)) +
facet_grid( ~treatment  ,scales = "free")
p2 <- ggplot(ta05_class_s[ta05_class_s$nucleic_acids == "RNA" & ta05_class_s$treatment %in% c("WM","WM + LB", "WM + BHI", "WM + LB + BHI") ,], aes(x = Sample, y = Abundance, fill = Class_mod)) +
geom_bar(position = "fill", stat = "identity", col = "black", linewidth = 0.2) +
scale_fill_manual("Taxa", values = cols2) + theme_bw() +
theme(plot.title = element_text(size = 7, face = "bold",hjust=0.5),
axis.text.x=element_text(size=7, angle=90, hjust = 1, vjust = 0.5),
axis.text.y=element_text(size=7),
axis.ticks.x = element_blank(),
axis.title.y = element_text(face="bold", size=10),
axis.title.x = element_text(face="bold", size=12),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "bottom",
legend.text = element_text(size=7),
legend.title=element_text(size=7, face="bold"),
legend.key.size = unit(0.35, "cm"),
strip.background = element_blank(),
strip.text = element_text(size = 7, face="bold")) +
scale_y_continuous(expand = c(0, 0)) +
labs(x="Treatment", y = "RNA")+
guides(fill=guide_legend(ncol=1)) +
facet_grid( ~treatment  ,scales = "free")
View(ta05_class_s)
print(ta05_class_s)
write.table(text, ta05_class_s, sep="\t", row.names=FALSE, col.names=True)
write.table(text, ta05_class_s, sep="\t", row.names=FALSE, col.names=TRUE)
write.table(x,file= "ta05_class_s", sep="\t", row.names=FALSE, col.names=TRUE)
write.table(file= "ta05_class_s", sep="\t", row.names=FALSE, col.names=TRUE)
write.table(mtcars,file= "ta05_class_s", sep="\t", row.names=FALSE, col.names=TRUE)
write.table(txt,file= "ta05_class_s", sep="\t", row.names=FALSE)
write.table(mdoc,file= "ta05_class_s", sep="\t", row.names=FALSE)
write.table(dt,file= "ta05_class_s", sep="\t", row.names=FALSE)
cite()
citetation
citation()
View(ta05_class_s)
write_xlsx(ta05_class_s,"bac_table.xlsx")
library(writexl)
install.packages("writexl")
library(writexl)
write_xlsx(ta05_class_s,"bac_table.xlsx")
load("arc_rawtable_phylomelt.RData")
# rename taxa depending on max abundance ####
## use function 'sort_abundant_taxa'
source("filter_taxa_above_threshold.R")
load("arc_long_rel_abd_table_bel05perc.RData")
## taxa above 0.5% in at least one samples
ta05 <- sort_abundant_taxa(table = phylo_melt, abundance_threshold = 0.5, Abundance = "Abundance")
# order additional metadata columns for later plotting ####
ta05_original <- ta05
ta05$ASV_table_taxa_abv_0.5_perc$nucleic_acids <- factor(ta05$ASV_table_taxa_abv_0.5_perc$nucleic_acids, levels=c("DNA","RNA"), ordered=T)
ta05$ASV_table_taxa_abv_0.5_perc$Sample <- factor(ta05$ASV_table_taxa_abv_0.5_perc$Sample, levels=c("arc.2C","arc.2C.Gen4","arc.B1", "arc.B2", "arc.B3",
"arc.BHI01A", "arc.BHI01B", "arc.BHI01C",
"arc.BHI05A", "arc.BHI05B", "arc.BHI05C",
"arc.LB01A", "arc.LB01B", "arc.LB01C",
"arc.LB05A", "arc.LB05B", "arc.LB05C", "arc.BHI05LB05"),
labels = c("2C","2C Gen4","Control A","Control B","Control C","BHI 0.1% A","BHI 0.1% B","BHI 0.1% C","BHI 0.5% A","BHI 0.5% B","BHI 0.5% C",
"LB 0.1% A","LB 0.1% B","LB 0.1% C", "LB 0.5% A","LB 0.5% B","LB 0.5% C", "BHI 0.5% LB 0.5%"), ordered = T)
ta05$ASV_table_taxa_abv_0.5_perc$treatment <- factor(ta05$ASV_table_taxa_abv_0.5_perc$treatment, levels=c("WM",
"LB", "BHI", "BHI_LB"),
labels = c("WM", "WM + LB", "WM + BHI", "WM + LB + BHI"),ordered=T)
ta05$ASV_table_taxa_abv_0.5_perc$concentration <- factor(ta05$ASV_table_taxa_abv_0.5_perc$concentration, levels=c("1", "0.1", "0.5"), ordered = T)
save(ta05, file = "arc_long_rel_abd_table_bel05perc.RData")
load("arc_long_rel_abd_table_bel05perc.RData")
load("arc_long_rel_abd_table_bel05perc.RData")
unique(ta05$ASV_table_taxa_abv_0.5_perc$Class_mod)
### subset to only column with class_mod as single taxonomy and Phylum_mod to group them by
ta05_class <- select(ta05$ASV_table_taxa_abv_0.5_perc, OTU, Sample, Class_mod, Phylum_mod, Abundance, nucleic_acids, treatment, concentration) %>%
mutate(Class_mod=factor(Class_mod, levels=c("other_p_Asgardarchaeota_<0.5%", "Bathyarchaeia","Methanosarcinia","other_p_Halobacterota_<0.5%",
"Thermoplasmata","other_Archaea_<0.5%"),
ordered = T),
Phylum_mod=factor(Phylum_mod)) %>%
group_by(Class_mod)
### sum ASVs of same taxonomy
ta05_class_s <- ta05_class %>%
group_by(Sample, Class_mod, Phylum_mod, nucleic_acids, treatment, concentration) %>%
summarise(Abundance = sum(Abundance)) %>%
ungroup()
write_xlsx(ta05_class_s, "arc_table.xlsx")
